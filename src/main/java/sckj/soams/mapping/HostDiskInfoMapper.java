package sckj.soams.mapping;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import sckj.soams.entity.HostDiskInfo;

public interface HostDiskInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_disk_info
     *
     * @mbggenerated
     */
    @Delete({
        "delete from host_disk_info",
        "where devid = #{devid,jdbcType=INTEGER}",
          "and hostid = #{hostid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(@Param("devid") Integer devid, @Param("hostid") String hostid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_disk_info
     *
     * @mbggenerated
     */
    @Insert({
        "insert into host_disk_info (devid, hostid, ",
        "devname, dirname, ",
        "systype, typename, ",
        "total, free, used, ",
        "usaged)",
        "values (#{devid,jdbcType=INTEGER}, #{hostid,jdbcType=VARCHAR}, ",
        "#{devname,jdbcType=VARCHAR}, #{dirname,jdbcType=VARCHAR}, ",
        "#{systype,jdbcType=VARCHAR}, #{typename,jdbcType=VARCHAR}, ",
        "#{total,jdbcType=VARCHAR}, #{free,jdbcType=VARCHAR}, #{used,jdbcType=VARCHAR}, ",
        "#{usaged,jdbcType=VARCHAR})"
    })
    int insert(HostDiskInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_disk_info
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "devid, hostid, devname, dirname, systype, typename, total, free, used, usaged",
        "from host_disk_info",
        "where devid = #{devid,jdbcType=INTEGER}",
          "and hostid = #{hostid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="devid", property="devid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="hostid", property="hostid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="devname", property="devname", jdbcType=JdbcType.VARCHAR),
        @Result(column="dirname", property="dirname", jdbcType=JdbcType.VARCHAR),
        @Result(column="systype", property="systype", jdbcType=JdbcType.VARCHAR),
        @Result(column="typename", property="typename", jdbcType=JdbcType.VARCHAR),
        @Result(column="total", property="total", jdbcType=JdbcType.VARCHAR),
        @Result(column="free", property="free", jdbcType=JdbcType.VARCHAR),
        @Result(column="used", property="used", jdbcType=JdbcType.VARCHAR),
        @Result(column="usaged", property="usaged", jdbcType=JdbcType.VARCHAR)
    })
    HostDiskInfo selectByPrimaryKey(@Param("devid") Integer devid, @Param("hostid") String hostid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_disk_info
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "devid, hostid, devname, dirname, systype, typename, total, free, used, usaged",
        "from host_disk_info"
    })
    @Results({
        @Result(column="devid", property="devid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="hostid", property="hostid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="devname", property="devname", jdbcType=JdbcType.VARCHAR),
        @Result(column="dirname", property="dirname", jdbcType=JdbcType.VARCHAR),
        @Result(column="systype", property="systype", jdbcType=JdbcType.VARCHAR),
        @Result(column="typename", property="typename", jdbcType=JdbcType.VARCHAR),
        @Result(column="total", property="total", jdbcType=JdbcType.VARCHAR),
        @Result(column="free", property="free", jdbcType=JdbcType.VARCHAR),
        @Result(column="used", property="used", jdbcType=JdbcType.VARCHAR),
        @Result(column="usaged", property="usaged", jdbcType=JdbcType.VARCHAR)
    })
    List<HostDiskInfo> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table host_disk_info
     *
     * @mbggenerated
     */
    @Update({
        "update host_disk_info",
        "set devname = #{devname,jdbcType=VARCHAR},",
          "dirname = #{dirname,jdbcType=VARCHAR},",
          "systype = #{systype,jdbcType=VARCHAR},",
          "typename = #{typename,jdbcType=VARCHAR},",
          "total = #{total,jdbcType=VARCHAR},",
          "free = #{free,jdbcType=VARCHAR},",
          "used = #{used,jdbcType=VARCHAR},",
          "usaged = #{usaged,jdbcType=VARCHAR}",
        "where devid = #{devid,jdbcType=INTEGER}",
          "and hostid = #{hostid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(HostDiskInfo record);
    
    @Select({
        "select",
        "devid, hostid, devname, dirname, systype, typename, total, free, used, usaged",
        "from host_disk_info",
        "where hostid = #{hostid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="devid", property="devid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="hostid", property="hostid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="devname", property="devname", jdbcType=JdbcType.VARCHAR),
        @Result(column="dirname", property="dirname", jdbcType=JdbcType.VARCHAR),
        @Result(column="systype", property="systype", jdbcType=JdbcType.VARCHAR),
        @Result(column="typename", property="typename", jdbcType=JdbcType.VARCHAR),
        @Result(column="total", property="total", jdbcType=JdbcType.VARCHAR),
        @Result(column="free", property="free", jdbcType=JdbcType.VARCHAR),
        @Result(column="used", property="used", jdbcType=JdbcType.VARCHAR),
        @Result(column="usaged", property="usaged", jdbcType=JdbcType.VARCHAR)
    })
    List<HostDiskInfo> getHostDiskInfo(@Param("hostid") String hostid);
}